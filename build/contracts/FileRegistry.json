{
  "contractName": "FileRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "uploader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "link",
          "type": "string"
        }
      ],
      "name": "FileRegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "files",
      "outputs": [
        {
          "internalType": "address",
          "name": "uploader",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "link",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "link",
          "type": "string"
        }
      ],
      "name": "registerFileHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "getFileUploader",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "getFileTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "fileHash",
          "type": "bytes32"
        }
      ],
      "name": "getFileLink",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"}],\"name\":\"FileRegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"files\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"uploader\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"getFileLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"getFileTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"}],\"name\":\"getFileUploader\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"fileHash\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"link\",\"type\":\"string\"}],\"name\":\"registerFileHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FileRegistry.sol\":\"FileRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/FileRegistry.sol\":{\"keccak256\":\"0x3cc2830f2e6f99cbbdf8f1ea86cd7ec8c2a1e5b18cc5eab430812d11560ae222\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f5fed8b305e591c2c435184b2424ccea7d429b68c0cd77da890b2156746c6cd\",\"dweb:/ipfs/QmYfMcsawYZFC8wjn3ouF3y7nAUPkpV3Ehet11Q7vA1ZBc\"]}},\"version\":1}",
  "bytecode": "0x60806040523461001f57610011610024565b610d7561002f8239610d7590f35b61002a565b60405190565b5f80fdfe60806040526004361015610013575b6105c6565b61001d5f3561006c565b80632504c2fc1461006757806388ac1a031461006257806398c9adff1461005d578063ef86fc64146100585763f38b833c0361000e57610592565b61046f565b610422565b6101a5565b6100ed565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b61009081610084565b0361009757565b5f80fd5b905035906100a882610087565b565b906020828203126100c3576100c0915f0161009b565b90565b61007c565b90565b6100d4906100c8565b9052565b91906100eb905f602085019401906100cb565b565b3461011d576101196101086101033660046100aa565b610c89565b610110610072565b918291826100d8565b0390f35b610078565b5190565b60209181520190565b5f5b838110610141575050905f910152565b806020918301518185015201610131565b601f801991011690565b61017b6101846020936101899361017281610122565b93848093610126565b9586910161012f565b610152565b0190565b6101a29160208201915f81840391015261015c565b90565b346101d5576101d16101c06101bb3660046100aa565b610cec565b6101c8610072565b9182918261018d565b0390f35b610078565b6101e390610084565b90565b906101f0906101da565b5f5260205260405f2090565b5f1c90565b60018060a01b031690565b61021861021d916101fc565b610201565b90565b61022a905461020c565b90565b90565b61023c610241916101fc565b61022d565b90565b61024e9054610230565b90565b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015610285575b602083101461028057565b610251565b91607f1691610275565b60209181520190565b5f5260205f2090565b905f92918054906102bb6102b483610265565b809461028f565b916001811690815f1461031257506001146102d6575b505050565b6102e39192939450610298565b915f925b8184106102fa57505001905f80806102d1565b600181602092959395548486015201910192906102e7565b92949550505060ff19168252151560200201905f80806102d1565b90610337916102a1565b90565b634e487b7160e01b5f52604160045260245ffd5b9061035890610152565b810190811067ffffffffffffffff82111761037257604052565b61033a565b9061039761039092610387610072565b9384809261032d565b038361034e565b565b6103a3905f6101e6565b6103ae5f8201610220565b916103c760026103c060018501610244565b9301610377565b90565b60018060a01b031690565b6103de906103ca565b90565b6103ea906103d5565b9052565b61041261041f94929361040860608401955f8501906103e1565b60208301906100cb565b604081840391015261015c565b90565b346104555761045161043d6104383660046100aa565b610399565b610448939193610072565b938493846103ee565b0390f35b610078565b919061046d905f602085019401906103e1565b565b3461049f5761049b61048a6104853660046100aa565b610c37565b610492610072565b9182918261045a565b0390f35b610078565b5f80fd5b5f80fd5b906104bf6104b8610072565b928361034e565b565b67ffffffffffffffff81116104df576104db602091610152565b0190565b61033a565b90825f939282370152565b909291926105046104ff826104c1565b6104ac565b938185526020850190828401116105205761051e926104e4565b565b6104a8565b9080601f8301121561054357816020610540933591016104ef565b90565b6104a4565b91909160408184031261058857610561835f830161009b565b92602082013567ffffffffffffffff8111610583576105809201610525565b90565b610080565b61007c565b5f0190565b346105c1576105ab6105a5366004610548565b90610ad9565b6105b3610072565b806105bd8161058d565b0390f35b610078565b5f80fd5b90565b5f1b90565b6105e66105e16105eb926105ca565b6105cd565b610084565b90565b5f7f496e76616c696420486173680000000000000000000000000000000000000000910152565b610622600c602092610126565b61062b816105ee565b0190565b6106449060208101905f818303910152610615565b90565b1561064e57565b610656610072565b62461bcd60e51b81528061066c6004820161062f565b0390fd5b90565b61068761068261068c926105ca565b610670565b6100c8565b90565b60207f7465726564000000000000000000000000000000000000000000000000000000917f546869732066696c652068617320616c7265616479206265656e2072656769735f8201520152565b6106e96025604092610126565b6106f28161068f565b0190565b61070b9060208101905f8183039101526106dc565b90565b1561071557565b61071d610072565b62461bcd60e51b815280610733600482016106f6565b0390fd5b61074160606104ac565b90565b9061074e906103d5565b9052565b9061075c906100c8565b9052565b52565b61076d90516103d5565b90565b9061078160018060a01b03916105cd565b9181191691161790565b61079f61079a6107a4926103ca565b610670565b6103ca565b90565b6107b09061078b565b90565b6107bc906107a7565b90565b90565b906107d76107d26107de926107b3565b6107bf565b8254610770565b9055565b6107ec90516100c8565b90565b906107fb5f19916105cd565b9181191691161790565b61081961081461081e926100c8565b610670565b6100c8565b90565b90565b9061083961083461084092610805565b610821565b82546107ef565b9055565b5190565b601f602091010490565b1b90565b9190600861087191029161086b5f1984610852565b92610852565b9181191691161790565b919061089161088c61089993610805565b610821565b908354610856565b9055565b5f90565b6108b3916108ad61089d565b9161087b565b565b5b8181106108c1575050565b806108ce5f6001936108a1565b016108b6565b9190601f81116108e4575b505050565b6108f061091593610298565b9060206108fc84610848565b8301931061091d575b61090e90610848565b01906108b5565b5f80806108df565b915061090e81929050610905565b1c90565b9061093f905f199060080261092b565b191690565b8161094e9161092f565b906002021790565b9061096081610122565b9067ffffffffffffffff8211610a20576109848261097e8554610265565b856108d4565b602090601f83116001146109b8579180916109a7935f926109ac575b5050610944565b90555b565b90915001515f806109a0565b601f198316916109c785610298565b925f5b818110610a08575091600293918560019694106109ee575b505050020190556109aa565b6109fe910151601f84169061092f565b90555f80806109e2565b919360206001819287870151815501950192016109ca565b61033a565b90610a2f91610956565b565b90610a7560406002610a7b94610a545f8201610a4e5f8801610763565b906107c2565b610a6d60018201610a67602088016107e2565b90610824565b019201610844565b90610a25565b565b90610a8791610a31565b565b610a9290610084565b9052565b9092610ac990610abf610ad69694610ab560808601975f870190610a89565b60208501906103e1565b60408301906100cb565b606081840391015261015c565b90565b610afe81610af7610af1610aec5f6105d2565b610084565b91610084565b1415610647565b610b2f610b176001610b115f85906101e6565b01610244565b610b29610b235f610673565b916100c8565b1461070e565b610b7233610b6242610b598691610b50610b47610737565b955f8701610744565b60208501610752565b60408301610760565b610b6d5f84906101e6565b610a7d565b3390610bac42937f6941311282d328a10b3e5068cc859a88709be2383f0b692e027b430f2c52685994610ba3610072565b94859485610a96565b0390a1565b5f90565b5f7f46696c65206e6f74207265676973746572656400000000000000000000000000910152565b610be96013602092610126565b610bf281610bb5565b0190565b610c0b9060208101905f818303910152610bdc565b90565b15610c1557565b610c1d610072565b62461bcd60e51b815280610c3360048201610bf6565b0390fd5b5f610c80610c8692610c47610bb1565b50610c7a610c616001610c5b8685906101e6565b01610244565b610c73610c6d86610673565b916100c8565b1415610c0e565b826101e6565b01610220565b90565b6001610cd2610cd892610c9a61089d565b50610ccc610cb384610cad5f85906101e6565b01610244565b610cc5610cbf5f610673565b916100c8565b1415610c0e565b5f6101e6565b01610244565b90565b606090565b610ce990610377565b90565b6002610d36610d3c92610cfd610cdb565b50610d30610d176001610d115f85906101e6565b01610244565b610d29610d235f610673565b916100c8565b1415610c0e565b5f6101e6565b01610ce0565b9056fea2646970667358221220a54b96547641df141df0d26057ef2dd856f8e80cf88557518f3e72036a98211864736f6c63430008150033",
  "deployedBytecode": "0x60806040526004361015610013575b6105c6565b61001d5f3561006c565b80632504c2fc1461006757806388ac1a031461006257806398c9adff1461005d578063ef86fc64146100585763f38b833c0361000e57610592565b61046f565b610422565b6101a5565b6100ed565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b61009081610084565b0361009757565b5f80fd5b905035906100a882610087565b565b906020828203126100c3576100c0915f0161009b565b90565b61007c565b90565b6100d4906100c8565b9052565b91906100eb905f602085019401906100cb565b565b3461011d576101196101086101033660046100aa565b610c89565b610110610072565b918291826100d8565b0390f35b610078565b5190565b60209181520190565b5f5b838110610141575050905f910152565b806020918301518185015201610131565b601f801991011690565b61017b6101846020936101899361017281610122565b93848093610126565b9586910161012f565b610152565b0190565b6101a29160208201915f81840391015261015c565b90565b346101d5576101d16101c06101bb3660046100aa565b610cec565b6101c8610072565b9182918261018d565b0390f35b610078565b6101e390610084565b90565b906101f0906101da565b5f5260205260405f2090565b5f1c90565b60018060a01b031690565b61021861021d916101fc565b610201565b90565b61022a905461020c565b90565b90565b61023c610241916101fc565b61022d565b90565b61024e9054610230565b90565b634e487b7160e01b5f52602260045260245ffd5b9060016002830492168015610285575b602083101461028057565b610251565b91607f1691610275565b60209181520190565b5f5260205f2090565b905f92918054906102bb6102b483610265565b809461028f565b916001811690815f1461031257506001146102d6575b505050565b6102e39192939450610298565b915f925b8184106102fa57505001905f80806102d1565b600181602092959395548486015201910192906102e7565b92949550505060ff19168252151560200201905f80806102d1565b90610337916102a1565b90565b634e487b7160e01b5f52604160045260245ffd5b9061035890610152565b810190811067ffffffffffffffff82111761037257604052565b61033a565b9061039761039092610387610072565b9384809261032d565b038361034e565b565b6103a3905f6101e6565b6103ae5f8201610220565b916103c760026103c060018501610244565b9301610377565b90565b60018060a01b031690565b6103de906103ca565b90565b6103ea906103d5565b9052565b61041261041f94929361040860608401955f8501906103e1565b60208301906100cb565b604081840391015261015c565b90565b346104555761045161043d6104383660046100aa565b610399565b610448939193610072565b938493846103ee565b0390f35b610078565b919061046d905f602085019401906103e1565b565b3461049f5761049b61048a6104853660046100aa565b610c37565b610492610072565b9182918261045a565b0390f35b610078565b5f80fd5b5f80fd5b906104bf6104b8610072565b928361034e565b565b67ffffffffffffffff81116104df576104db602091610152565b0190565b61033a565b90825f939282370152565b909291926105046104ff826104c1565b6104ac565b938185526020850190828401116105205761051e926104e4565b565b6104a8565b9080601f8301121561054357816020610540933591016104ef565b90565b6104a4565b91909160408184031261058857610561835f830161009b565b92602082013567ffffffffffffffff8111610583576105809201610525565b90565b610080565b61007c565b5f0190565b346105c1576105ab6105a5366004610548565b90610ad9565b6105b3610072565b806105bd8161058d565b0390f35b610078565b5f80fd5b90565b5f1b90565b6105e66105e16105eb926105ca565b6105cd565b610084565b90565b5f7f496e76616c696420486173680000000000000000000000000000000000000000910152565b610622600c602092610126565b61062b816105ee565b0190565b6106449060208101905f818303910152610615565b90565b1561064e57565b610656610072565b62461bcd60e51b81528061066c6004820161062f565b0390fd5b90565b61068761068261068c926105ca565b610670565b6100c8565b90565b60207f7465726564000000000000000000000000000000000000000000000000000000917f546869732066696c652068617320616c7265616479206265656e2072656769735f8201520152565b6106e96025604092610126565b6106f28161068f565b0190565b61070b9060208101905f8183039101526106dc565b90565b1561071557565b61071d610072565b62461bcd60e51b815280610733600482016106f6565b0390fd5b61074160606104ac565b90565b9061074e906103d5565b9052565b9061075c906100c8565b9052565b52565b61076d90516103d5565b90565b9061078160018060a01b03916105cd565b9181191691161790565b61079f61079a6107a4926103ca565b610670565b6103ca565b90565b6107b09061078b565b90565b6107bc906107a7565b90565b90565b906107d76107d26107de926107b3565b6107bf565b8254610770565b9055565b6107ec90516100c8565b90565b906107fb5f19916105cd565b9181191691161790565b61081961081461081e926100c8565b610670565b6100c8565b90565b90565b9061083961083461084092610805565b610821565b82546107ef565b9055565b5190565b601f602091010490565b1b90565b9190600861087191029161086b5f1984610852565b92610852565b9181191691161790565b919061089161088c61089993610805565b610821565b908354610856565b9055565b5f90565b6108b3916108ad61089d565b9161087b565b565b5b8181106108c1575050565b806108ce5f6001936108a1565b016108b6565b9190601f81116108e4575b505050565b6108f061091593610298565b9060206108fc84610848565b8301931061091d575b61090e90610848565b01906108b5565b5f80806108df565b915061090e81929050610905565b1c90565b9061093f905f199060080261092b565b191690565b8161094e9161092f565b906002021790565b9061096081610122565b9067ffffffffffffffff8211610a20576109848261097e8554610265565b856108d4565b602090601f83116001146109b8579180916109a7935f926109ac575b5050610944565b90555b565b90915001515f806109a0565b601f198316916109c785610298565b925f5b818110610a08575091600293918560019694106109ee575b505050020190556109aa565b6109fe910151601f84169061092f565b90555f80806109e2565b919360206001819287870151815501950192016109ca565b61033a565b90610a2f91610956565b565b90610a7560406002610a7b94610a545f8201610a4e5f8801610763565b906107c2565b610a6d60018201610a67602088016107e2565b90610824565b019201610844565b90610a25565b565b90610a8791610a31565b565b610a9290610084565b9052565b9092610ac990610abf610ad69694610ab560808601975f870190610a89565b60208501906103e1565b60408301906100cb565b606081840391015261015c565b90565b610afe81610af7610af1610aec5f6105d2565b610084565b91610084565b1415610647565b610b2f610b176001610b115f85906101e6565b01610244565b610b29610b235f610673565b916100c8565b1461070e565b610b7233610b6242610b598691610b50610b47610737565b955f8701610744565b60208501610752565b60408301610760565b610b6d5f84906101e6565b610a7d565b3390610bac42937f6941311282d328a10b3e5068cc859a88709be2383f0b692e027b430f2c52685994610ba3610072565b94859485610a96565b0390a1565b5f90565b5f7f46696c65206e6f74207265676973746572656400000000000000000000000000910152565b610be96013602092610126565b610bf281610bb5565b0190565b610c0b9060208101905f818303910152610bdc565b90565b15610c1557565b610c1d610072565b62461bcd60e51b815280610c3360048201610bf6565b0390fd5b5f610c80610c8692610c47610bb1565b50610c7a610c616001610c5b8685906101e6565b01610244565b610c73610c6d86610673565b916100c8565b1415610c0e565b826101e6565b01610220565b90565b6001610cd2610cd892610c9a61089d565b50610ccc610cb384610cad5f85906101e6565b01610244565b610cc5610cbf5f610673565b916100c8565b1415610c0e565b5f6101e6565b01610244565b90565b606090565b610ce990610377565b90565b6002610d36610d3c92610cfd610cdb565b50610d30610d176001610d115f85906101e6565b01610244565b610d29610d235f610673565b916100c8565b1415610c0e565b5f6101e6565b01610ce0565b9056fea2646970667358221220a54b96547641df141df0d26057ef2dd856f8e80cf88557518f3e72036a98211864736f6c63430008150033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "58:1322:0:-:0;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;",
  "deployedSourceMap": "58:1322:0:-:0;;;;;;;;;-1:-1:-1;58:1322:0;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;191:43::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;:::i;:::-;;:::o;58:1322::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::o;332:449::-;413:47;421:8;:22;;433:10;441:1;433:10;:::i;:::-;421:22;:::i;:::-;;;:::i;:::-;;;413:47;:::i;:::-;470:80;478:25;;:15;:5;484:8;478:15;;:::i;:::-;:25;;:::i;:::-;:30;;507:1;478:30;:::i;:::-;;;:::i;:::-;;470:80;:::i;:::-;561:138;614:10;579:120;649:15;579:120;684:4;579:120;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;561:15;:5;567:8;561:15;;:::i;:::-;:138;:::i;:::-;740:10;752:15;715:59;752:15;769:4;715:59;;;;:::i;:::-;;;;;;:::i;:::-;;;;332:449::o;58:1322::-;;;:::o;:::-;;;;;;:::o;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;787:193;949:24;:15;:24;787:193;851:7;;:::i;:::-;878:5;870:62;878:25;;:15;:5;884:8;878:15;;:::i;:::-;:25;;:::i;:::-;:30;;907:1;878:30;:::i;:::-;;;:::i;:::-;;;870:62;:::i;:::-;949:5;:15;:::i;:::-;:24;;:::i;:::-;942:31;:::o;986:195::-;1149:25;:15;:25;986:195;1051:7;;:::i;:::-;1078:5;1070:62;1078:25;:5;:15;:5;1084:8;1078:15;;:::i;:::-;:25;;:::i;:::-;:30;;1107:1;1078:30;:::i;:::-;;;:::i;:::-;;;1070:62;:::i;:::-;1149:5;:15;:::i;:::-;:25;;:::i;:::-;1142:32;:::o;58:1322::-;;;:::o;:::-;;;;:::i;:::-;;:::o;1187:191::-;1351:20;:15;1344:27;1187:191;1247:13;;:::i;:::-;1280:5;1272:62;1280:25;;:15;:5;1286:8;1280:15;;:::i;:::-;:25;;:::i;:::-;:30;;1309:1;1280:30;:::i;:::-;;;:::i;:::-;;;1272:62;:::i;:::-;1351:5;:15;:::i;:::-;:20;1344:27;:::i;:::-;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract FileRegistry {\n    struct FileRecord {\n        address uploader;\n        uint256 timestamp;\n        string link;\n    }\n\n    mapping(bytes32 => FileRecord) public files;\n\n    event FileRegistered(bytes32 hash, address uploader, uint256 timestamp, string link);\n\n    function registerFileHash(bytes32 fileHash, string memory link) public {\n        require(fileHash != bytes32(0), \"Invalid Hash\");\n        require(files[fileHash].timestamp == 0, \"This file has already been registered\");\n\n        files[fileHash] = FileRecord({\n            uploader: msg.sender,\n            timestamp: block.timestamp,\n            link: link\n        });\n\n        emit FileRegistered(fileHash, msg.sender, block.timestamp, link);\n    }\n\n    function getFileUploader(bytes32 fileHash) public view returns (address) {\n        require(files[fileHash].timestamp != 0, \"File not registered\");\n        return files[fileHash].uploader;\n    }\n\n    function getFileTimestamp(bytes32 fileHash) public view returns (uint256) {\n        require(files[fileHash].timestamp != 0, \"File not registered\");\n        return files[fileHash].timestamp;\n    }\n\n    function getFileLink(bytes32 fileHash) public view returns (string memory) {\n        require(files[fileHash].timestamp != 0, \"File not registered\");\n        return files[fileHash].link;\n    }\n}",
  "sourcePath": "/home/gess-desktop/Desktop/TCC/meican-smart-contract-api/contracts/FileRegistry.sol",
  "ast": {
    "absolutePath": "project:/contracts/FileRegistry.sol",
    "exportedSymbols": {
      "FileRegistry": [
        142
      ]
    },
    "id": 143,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FileRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 142,
        "linearizedBaseContracts": [
          142
        ],
        "name": "FileRegistry",
        "nameLocation": "67:12:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "FileRegistry.FileRecord",
            "id": 8,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "uploader",
                "nameLocation": "122:8:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "114:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 2,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "114:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "148:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "140:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "140:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "link",
                "nameLocation": "174:4:0",
                "nodeType": "VariableDeclaration",
                "scope": 8,
                "src": "167:11:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 6,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "167:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "FileRecord",
            "nameLocation": "93:10:0",
            "nodeType": "StructDefinition",
            "scope": 142,
            "src": "86:99:0",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "98c9adff",
            "id": 13,
            "mutability": "mutable",
            "name": "files",
            "nameLocation": "229:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 142,
            "src": "191:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
              "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord)"
            },
            "typeName": {
              "id": 12,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 9,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "199:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "191:30:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 11,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10,
                  "name": "FileRecord",
                  "nameLocations": [
                    "210:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 8,
                  "src": "210:10:0"
                },
                "referencedDeclaration": 8,
                "src": "210:10:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FileRecord_$8_storage_ptr",
                  "typeString": "struct FileRegistry.FileRecord"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "6941311282d328a10b3e5068cc859a88709be2383f0b692e027b430f2c526859",
            "id": 23,
            "name": "FileRegistered",
            "nameLocation": "247:14:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "270:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "262:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "262:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "uploader",
                  "nameLocation": "284:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "276:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "302:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "294:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "link",
                  "nameLocation": "320:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "313:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "313:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "261:64:0"
            },
            "src": "241:85:0"
          },
          {
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "403:378:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 31,
                          "name": "fileHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "421:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 34,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "441:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "433:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 32,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "433:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "433:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "421:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642048617368",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "445:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba85355446d9b715d21380d7e3bbc51574623bf3aaf5d6e2300a108f39d9451f",
                          "typeString": "literal_string \"Invalid Hash\""
                        },
                        "value": "Invalid Hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ba85355446d9b715d21380d7e3bbc51574623bf3aaf5d6e2300a108f39d9451f",
                          "typeString": "literal_string \"Invalid Hash\""
                        }
                      ],
                      "id": 30,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "413:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "413:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39,
                  "nodeType": "ExpressionStatement",
                  "src": "413:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 41,
                              "name": "files",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "478:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                                "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                              }
                            },
                            "id": 43,
                            "indexExpression": {
                              "id": 42,
                              "name": "fileHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25,
                              "src": "484:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "478:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                              "typeString": "struct FileRegistry.FileRecord storage ref"
                            }
                          },
                          "id": 44,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "494:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "478:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "507:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "478:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732066696c652068617320616c7265616479206265656e2072656769737465726564",
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "510:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6c5bd8685a74cf96f37ef7d38d5774fe6dc3023742ec55cee704c6786a5fd7e",
                          "typeString": "literal_string \"This file has already been registered\""
                        },
                        "value": "This file has already been registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6c5bd8685a74cf96f37ef7d38d5774fe6dc3023742ec55cee704c6786a5fd7e",
                          "typeString": "literal_string \"This file has already been registered\""
                        }
                      ],
                      "id": 40,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "470:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "470:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "470:80:0"
                },
                {
                  "expression": {
                    "id": 60,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50,
                        "name": "files",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "561:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                          "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                        }
                      },
                      "id": 52,
                      "indexExpression": {
                        "id": 51,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "567:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "561:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                        "typeString": "struct FileRegistry.FileRecord storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 54,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "614:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 55,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "618:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "614:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 56,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "649:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 57,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "655:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "649:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 58,
                          "name": "link",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 27,
                          "src": "684:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 53,
                        "name": "FileRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "579:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FileRecord_$8_storage_ptr_$",
                          "typeString": "type(struct FileRegistry.FileRecord storage pointer)"
                        }
                      },
                      "id": 59,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "604:8:0",
                        "638:9:0",
                        "678:4:0"
                      ],
                      "names": [
                        "uploader",
                        "timestamp",
                        "link"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "579:120:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FileRecord_$8_memory_ptr",
                        "typeString": "struct FileRegistry.FileRecord memory"
                      }
                    },
                    "src": "561:138:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                      "typeString": "struct FileRegistry.FileRecord storage ref"
                    }
                  },
                  "id": 61,
                  "nodeType": "ExpressionStatement",
                  "src": "561:138:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 63,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "730:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 64,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "740:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "744:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "740:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 66,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "752:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 67,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "758:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "752:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68,
                        "name": "link",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "769:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 62,
                      "name": "FileRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "715:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,uint256,string memory)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "715:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "EmitStatement",
                  "src": "710:64:0"
                }
              ]
            },
            "functionSelector": "f38b833c",
            "id": 72,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerFileHash",
            "nameLocation": "341:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "366:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "358:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "358:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "link",
                  "nameLocation": "390:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "376:18:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "376:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "357:38:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "403:0:0"
            },
            "scope": 142,
            "src": "332:449:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "860:120:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 80,
                              "name": "files",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "878:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                                "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                              }
                            },
                            "id": 82,
                            "indexExpression": {
                              "id": 81,
                              "name": "fileHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 74,
                              "src": "884:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "878:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                              "typeString": "struct FileRegistry.FileRecord storage ref"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "894:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "878:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 84,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "907:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "878:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c65206e6f742072656769737465726564",
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "910:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1afc4e64489f4024fe5efa40f90fb4fc7982de86ac0014e02ff23840a1b39bf",
                          "typeString": "literal_string \"File not registered\""
                        },
                        "value": "File not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1afc4e64489f4024fe5efa40f90fb4fc7982de86ac0014e02ff23840a1b39bf",
                          "typeString": "literal_string \"File not registered\""
                        }
                      ],
                      "id": 79,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "870:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 87,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "870:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 88,
                  "nodeType": "ExpressionStatement",
                  "src": "870:62:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 89,
                        "name": "files",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "949:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                          "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                        }
                      },
                      "id": 91,
                      "indexExpression": {
                        "id": 90,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "955:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "949:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                        "typeString": "struct FileRegistry.FileRecord storage ref"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "965:8:0",
                    "memberName": "uploader",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3,
                    "src": "949:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 78,
                  "id": 93,
                  "nodeType": "Return",
                  "src": "942:31:0"
                }
              ]
            },
            "functionSelector": "ef86fc64",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFileUploader",
            "nameLocation": "796:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "820:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "812:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:18:0"
            },
            "returnParameters": {
              "id": 78,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "851:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "850:9:0"
            },
            "scope": 142,
            "src": "787:193:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 117,
              "nodeType": "Block",
              "src": "1060:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 103,
                              "name": "files",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1078:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                                "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                              }
                            },
                            "id": 105,
                            "indexExpression": {
                              "id": 104,
                              "name": "fileHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 97,
                              "src": "1084:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1078:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                              "typeString": "struct FileRegistry.FileRecord storage ref"
                            }
                          },
                          "id": 106,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1094:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "1078:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1107:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1078:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c65206e6f742072656769737465726564",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1110:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1afc4e64489f4024fe5efa40f90fb4fc7982de86ac0014e02ff23840a1b39bf",
                          "typeString": "literal_string \"File not registered\""
                        },
                        "value": "File not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1afc4e64489f4024fe5efa40f90fb4fc7982de86ac0014e02ff23840a1b39bf",
                          "typeString": "literal_string \"File not registered\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1070:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1070:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:62:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 112,
                        "name": "files",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1149:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                          "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                        }
                      },
                      "id": 114,
                      "indexExpression": {
                        "id": 113,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 97,
                        "src": "1155:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1149:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                        "typeString": "struct FileRegistry.FileRecord storage ref"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1165:9:0",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5,
                    "src": "1149:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 101,
                  "id": 116,
                  "nodeType": "Return",
                  "src": "1142:32:0"
                }
              ]
            },
            "functionSelector": "2504c2fc",
            "id": 118,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFileTimestamp",
            "nameLocation": "995:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 98,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 97,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "1020:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1012:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 96,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1012:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1011:18:0"
            },
            "returnParameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 118,
                  "src": "1051:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1051:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1050:9:0"
            },
            "scope": 142,
            "src": "986:195:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "1262:116:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 126,
                              "name": "files",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "1280:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                                "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                              }
                            },
                            "id": 128,
                            "indexExpression": {
                              "id": 127,
                              "name": "fileHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 120,
                              "src": "1286:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1280:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                              "typeString": "struct FileRegistry.FileRecord storage ref"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1296:9:0",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5,
                          "src": "1280:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1309:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1280:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "46696c65206e6f742072656769737465726564",
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1312:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1afc4e64489f4024fe5efa40f90fb4fc7982de86ac0014e02ff23840a1b39bf",
                          "typeString": "literal_string \"File not registered\""
                        },
                        "value": "File not registered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1afc4e64489f4024fe5efa40f90fb4fc7982de86ac0014e02ff23840a1b39bf",
                          "typeString": "literal_string \"File not registered\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1272:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:62:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:62:0"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 135,
                        "name": "files",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "1351:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_FileRecord_$8_storage_$",
                          "typeString": "mapping(bytes32 => struct FileRegistry.FileRecord storage ref)"
                        }
                      },
                      "id": 137,
                      "indexExpression": {
                        "id": 136,
                        "name": "fileHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 120,
                        "src": "1357:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1351:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FileRecord_$8_storage",
                        "typeString": "struct FileRegistry.FileRecord storage ref"
                      }
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1367:4:0",
                    "memberName": "link",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 7,
                    "src": "1351:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 124,
                  "id": 139,
                  "nodeType": "Return",
                  "src": "1344:27:0"
                }
              ]
            },
            "functionSelector": "88ac1a03",
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFileLink",
            "nameLocation": "1196:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 120,
                  "mutability": "mutable",
                  "name": "fileHash",
                  "nameLocation": "1216:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1208:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 119,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1207:18:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "1247:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1247:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1246:15:0"
            },
            "scope": 142,
            "src": "1187:191:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 143,
        "src": "58:1322:0",
        "usedErrors": [],
        "usedEvents": [
          23
        ]
      }
    ],
    "src": "32:1348:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.21+commit.d9974bed.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0xfA3f1d6507EB061B81FA3524411068A25014B2D0",
      "transactionHash": "0x0f7b39e6fd868505ba8d8fafc57e92d3bc8ce5d216568c770d328f51a7bf95d2"
    },
    "1743040015566": {
      "events": {},
      "links": {},
      "address": "0x9561C133DD8580860B6b7E504bC5Aa500f0f06a7",
      "transactionHash": "0x11f71556ed04d224379d3634c2c39064f24eff47ad2d0829fbccbf63918f0a80"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-04-03T01:26:48.856Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}